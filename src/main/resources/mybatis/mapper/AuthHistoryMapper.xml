<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.none.authcenter.dao.AuthHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.none.authcenter.vo.AuthHistory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="licence_key_id" property="licenceKeyId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, licence_key_id, remark, result, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auth_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from auth_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.none.authcenter.vo.AuthHistory" >
    insert into auth_history (id, licence_key_id, remark, 
      result, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{licenceKeyId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{result,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.none.authcenter.vo.AuthHistory" >
    insert into auth_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="licenceKeyId != null" >
        licence_key_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="licenceKeyId != null" >
        #{licenceKeyId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.none.authcenter.vo.AuthHistory" >
    update auth_history
    <set >
      <if test="licenceKeyId != null" >
        licence_key_id = #{licenceKeyId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.none.authcenter.vo.AuthHistory" >
    update auth_history
    set licence_key_id = #{licenceKeyId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>